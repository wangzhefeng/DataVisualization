install.packages("waffle")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
nrows = 10
categ_table = round(table(mpg$class) * (nrows * nrows) / length(mpg$class))
categ_table
table(mpg$class)
100 / length(mpg$class)
mpg$class
length(mpg$class)
categ_table = round(table(mpg$class) * (nrows * nrows) / length(mpg$class))
sort_table = sort(categ_table, index.return = TRUE, decreasing = FALSE)
sort_table
sort_table = round(table(mpg$class) * (nrows * nrows) / length(mpg$class)) %>%
sort(index.return = TRUE, decreasing = FALSE)
sort_table
Order = sort(as.data.frame(categ_table)$Freq, index.return = TRUE, decreasing = FALSE)
Order
df = expand.grid(y = 1:10, x = 1:10)
df
sort_table = round(table(mpg$class) * (10 * 10) / length(mpg$class)) %>%
sort(index.return = TRUE, decreasing = FALSE)
Order = sort(as.data.frame(categ_table)$Freq, index.return = TRUE, decreasing = FALSE)
df = expand.grid(y = 1:10, x = 1:10)
df.category = factor(rep(names(sort_table), sort_table), levels = names(sort_table))
df
ggplot(data = df, aes(x = y, y = x, fill = category)) +
geom_tile(color = "white", size = 0.25) +
coord_fixed(ratio = 1) +
scale_x_continuous(trans = "reverse") +
scale_y_continuous(trans = "reverse") +
scale_fill_manual(name = "Category", values = Colormap) +
theme(panel.background = element_blank(),
plot.title = element_text(size = rel(1.2)),
legend.position = "right")
# data
sort_table = round(table(mpg$class) * (10 * 10) / length(mpg$class)) %>%
sort(index.return = TRUE, decreasing = FALSE)
Order = sort(as.data.frame(categ_table)$Freq, index.return = TRUE, decreasing = FALSE)
df = expand.grid(y = 1:10, x = 1:10)
df$category = factor(rep(names(sort_table), sort_table), levels = names(sort_table))
df
Colormap = brewer.pal(length(sort_table), "Set2")
library(RColorBrewer)
ggplot(data = df, aes(x = y, y = x, fill = category)) +
geom_tile(color = "white", size = 0.25) +
coord_fixed(ratio = 1) +
scale_x_continuous(trans = "reverse") +
scale_y_continuous(trans = "reverse") +
scale_fill_manual(name = "Category", values = Colormap) +
theme(panel.background = element_blank(),
plot.title = element_text(size = rel(1.2)),
legend.position = "right")
Colormap = brewer.pal(length(sort_table), "Set2")
ggplot(data = df, aes(x = y, y = x, fill = category)) +
geom_tile(color = "white", size = 0.25) +
coord_fixed(ratio = 1) +
scale_x_continuous(trans = "reverse") +
scale_y_continuous(trans = "reverse") +
scale_fill_manual(name = "Category", values = Colormap) +
theme(panel.background = element_blank(),
plot.title = element_text(size = rel(1.2)),
legend.position = "right")
ggplot(data = df, aes(x = y, y = x, fill = category)) +
geom_point(color = "black", shape = 21, size = 6)+
coord_fixed(ratio = 1) +
scale_x_continuous(trans = "reverse") +
scale_y_continuous(trans = "reverse") +
scale_fill_manual(name = "Category", values = Colormap) +
theme(panel.background = element_blank(),
plot.title = element_text(size = rel(1.2)),
legend.position = "right")
ggplot(data = df, aes(x = y, y = x, fill = category)) +
geom_tile(color = "white", size = 0.25) +
coord_fixed(ratio = 1) +
scale_x_continuous(trans = "reverse") +
scale_y_continuous(trans = "reverse") +
scale_fill_manual(name = "Category", values = Colormap) +
theme(panel.background = element_blank(),
plot.title = element_text(size = rel(1.2)),
legend.position = "right")
sort_table = round(table(mpg$class) * (10 * 10) / length(mpg$class)) %>%
sort(index.return = TRUE, decreasing = FALSE)
Order = sort(as.data.frame(categ_table)$Freq, index.return = TRUE, decreasing = FALSE)
df = expand.grid(y = 1:10, x = 1:10)
df$category = factor(rep(names(sort_table), sort_table), levels = names(sort_table))
df
ggplot(data = df, aes(x = y, y = x, fill = category)) +
geom_point(color = "black", shape = 21, size = 6)
ggplot(data = df, aes(x = y, y = x, fill = category)) +
geom_tile(color = "white", size = 0.25)
categ_table = round(table(mpg$class) * (10 * 10) / length(mpg$class))
categ_table
table(mpg$class)
sort_table = sort(categ_table, index.return = TRUE, decreasing = FALSE)
sort_table
as.data.frame(categ_table)$Freq
as.data.frame(categ_table)
rep(names(sort_table), sort_table)
head(mpg)
dim(mpg)
mpg$class
100 / 234
table(mpg$class)
table(mpg$class) / length(mpg$class)
table(mpg$class) / length(mpg$class) * 100
install.packages("VennDiagram")
library(gplots)
install.packages("limma")
install.packages("limma")
knitr::opts_chunk$set(echo = TRUE)
# library(limma)
library(venneuler)
install.packages("venneuler")
# library(limma)
library(venneuler)
library(venneuler)
# library(limma)
install.packages("venneuler")
library(RColorBrewer)
venn.diagram(list(B = 1:1800,
A = 1571:2020,
C = 500:1100),
fill = c(brewer.pal(7, "Set1")[1:3]),
alpha = c(0.5, 0.5, 0.5),
cex = 2,
cat.cex = 3,
cat.fontface = 4,
lty = 2,
fontfamily = 3,
resolution = 300,
filename = "trial2.tiff")
library(VennDiagram)
venn.diagram(list(B = 1:1800,
A = 1571:2020,
C = 500:1100),
fill = c(brewer.pal(7, "Set1")[1:3]),
alpha = c(0.5, 0.5, 0.5),
cex = 2,
cat.cex = 3,
cat.fontface = 4,
lty = 2,
fontfamily = 3,
resolution = 300,
filename = "trial2.tiff")
# library(limma)
# library(venneuler)
```{r}
library(RColorBrewer)
venn.diagram(list(B = 1:1800,
A = 1571:2020,
C = 500:1100),
fill = c(brewer.pal(7, "Set1")[1:3]),
alpha = c(0.5, 0.5, 0.5),
cex = 2,
cat.cex = 3,
cat.fontface = 4,
lty = 2,
fontfamily = 3,
resolution = 300,
filename = "trial2.tiff")
venn.diagram(list(B = 1:1800,
A = 1571:2020,
C = 500:1100),
fill = c(brewer.pal(7, "Set1")[1:3]),
alpha = c(0.5, 0.5, 0.5),
cex = 2,
cat.cex = 3,
cat.fontface = 4,
lty = 2,
fontfamily = 3,
resolution = 300,
#filename = "trial2.tiff"
)
venn.diagram(list(B = 1:1800,
A = 1571:2020,
C = 500:1100),
fill = c(brewer.pal(7, "Set1")[1:3]),
alpha = c(0.5, 0.5, 0.5),
cex = 2,
cat.cex = 3,
cat.fontface = 4,
lty = 2,
fontfamily = 3,
resolution = 300,
filename = "trial2.tiff"
)
?venn.diagram
venn.plot = venn.diagram(list(B = 1:1800,
A = 1571:2020,
C = 500:1100),
fill = c(brewer.pal(7, "Set1")[1:3]),
alpha = c(0.5, 0.5, 0.5),
cex = 2,
cat.cex = 3,
cat.fontface = 4,
lty = 2,
fontfamily = 3,
resolution = 300,
filename = "trial2.tiff"
)
venn.plot
venn.plot <- venn.diagram(
list(A = 1:150, B = 121:170),
"Venn_2set_simple.tiff"
)
venn.plot
venn.plot = venn.diagram(list(B = 1:1800,
A = 1571:2020,
C = 500:1100),
fill = c(brewer.pal(7, "Set1")[1:3]),
alpha = c(0.5, 0.5, 0.5),
cex = 2,
cat.cex = 3,
cat.fontface = 4,
lty = 2,
fontfamily = 3,
resolution = 300,
filename = "trial2.tiff"
);
venn.plot = venn.diagram(list(B = 1:1800,
A = 1571:2020,
C = 500:1100),
fill = c(brewer.pal(7, "Set1")[1:3]),
alpha = c(0.5, 0.5, 0.5),
cex = 2,
cat.cex = 3,
cat.fontface = 4,
lty = 2,
fontfamily = 3,
resolution = 300,
filename = "trial2.tiff"
);
venn.plot
venn
venn.diagram()
knitr::opts_chunk$set(echo = TRUE)
df = data.frame(value = c(24.20, 75.90, 12.50, 12.30, 8.10, 12.10),
group = c("LVS", "SJM", "MCE", "Galaxy", "MGM", "Wynn"))
df = arrange(df, desc(value))
df = data.frame(value = c(24.20, 75.90, 12.50, 12.30, 8.10, 12.10),
group = c("LVS", "SJM", "MCE", "Galaxy", "MGM", "Wynn"))
df
df = arrange(df, desc(value))
library(tidyverse)
df = arrange(df, desc(value))
df
knitr::opts_chunk$set(echo = TRUE)
# data
categ_table = round(table(mpg$class))
sort_table = sort(categ_table, index.return = TRUE, decreasing = FALSE)
Order = sort(as.data.frame(categ_table)$Freq, index.return = TRUE, decreasing = FALSE)
df = expand.grid(y = 1:10, x = 1:10)
df$category = factor(rep(names(sort_table), sort_table), levels = names(sort_table))
head(df, 20)
sort_table
Order
df = data.frame(value = c(24.20, 75.90, 12.50, 12.30, 8.10, 12.10),
group = c("LVS", "SJM", "MCE", "Galaxy", "MGM", "Wynn"))
df = arrange(df, desc(value))
df$color = rev(brewer.pal(nrow(df), "Oranges"))
df = df[c(2:nrow(df), 1), ]
df
knitr::opts_chunk$set(echo = TRUE)
library(VennDiagram)
library(gplots)
library(RColorBrewer)
venn.diagram(list(B = 1:1800,
A = 1571:2020,
C = 500:1100),
fill = c(brewer.pal(7, "Set1")[1:3]),
alpha = c(0.5, 0.5, 0.5),
cex = 2,
cat.cex = 3,
cat.fontface = 4,
lty = 2,
fontfamily = 3,
resolution = 300,
filename = "/home/wangzhefeng/project/DataVisualztion/charts/venn/trial2.tiff"
)
setwd("/Users/zfwang/project/DataVisualiztion/charts/bar/")
getwd()
setwd("/home/wangzhefeng/project/DataVisualiztion/charts/bar/")
path = getwd()
path
path = getwd()
path
path = getwd()
path
?read.csv
library(tidyverse)
library(reshape2)
mydata <- data.frame(Cut = c("Fair", "Good", "Very Good", "Premium", "Ideal"),
Price = c(4300, 3800, 3950, 4700, 3500))
ggplot(data = mydata, mapping = aes(x = Cut, y = Price)) +
geom_bar(stat = "identity", position = "identity",
width = 0.8, size = 0.25,
colour = "black",
fill = "#FC4E07",
alpha = 1)
mydata <- data.frame(Cut = c("Fair", "Good", "Very Good", "Premium", "Ideal"),
Price = c(4300, 3800, 3950, 4700, 3500))
mydata
library(tidyverse)
library(reshape2)
mydata <- data.frame(Cut = c("Fair", "Good", "Very Good", "Premium", "Ideal"),
Price = c(4300, 3800, 3950, 4700, 3500))
ggplot(data = mydata, mapping = aes(x = Cut, y = Price)) +
geom_bar(stat = "identity", position = "identity",
width = 0.8, size = 0.25,
colour = "black",
fill = "#FC4E07",
alpha = 1)
# 不等宽柱形图
library(ggplot2)
mydata = data.frame(Name = paste0("Project", 1:5),
Scale = c(35, 30, 20, 10, 5),
ARPU = c(56, 37, 63, 57, 59))
mydata
mydata$xmin = 0
for (i in 2:5) {
mydata$xmin[i] = sum(mydata$Scale[1:i-1])
}
for (i in 1:5) {
mydata$xmax[i] = sum(mydata$Scale[1:i])
}
for (i in 1:5) {
mydata$label[i] = sum(mydata$Scale[1:i]) - mydata$Scale[i] / 2
}
mydata
ggplot(data = mydata) +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = 0, ymax = ARPU,
fill = Name),
colour = "black",
size = 0.25)
ggplot(data = mydata) +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = 0, ymax = ARPU,
fill = Name),
colour = "black", size = 0.25) +
geom_text(mapping = aes(x = label, y = ARPU), size = 4, col = "black") +
geom_text(mapping = aes(x = label, y = -2.5, label = Name), size = 4, col = "black")
ggplot(data = mydata) +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = 0, ymax = ARPU,
fill = Name),
colour = "black", size = 0.25) +
geom_text(mapping = aes(x = label, y = ARPU + 3, label = ARPU), size = 4, col = "black") +
geom_text(mapping = aes(x = label, y = -2.5, label = Name), size = 4, col = "black")
mydata
ggplot(data = mydata) +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = 0, ymax = ARPU,
fill = Name),
colour = "black", size = 0.25) +
geom_text(mapping = aes(x = label, y = ARPU + 3, label = ARPU),
size = 4, colour = "black") +
geom_text(mapping = aes(x = label, y = -2.5, label = Name),
size = 4, colour = "black")
mydata
mydata <- data.frame(Cut = c("Fair", "Good", "Very Good", "Premium", "Ideal"),
Price = c(4300, 3800, 3950, 4700, 3500))
ggplot(data = mydata, mapping = aes(x = Cut, y = Price)) +
geom_bar(stat = "identity", position = "identity",
width = 0.8, size = 0.25,
colour = "black",
fill = "#FC4E07",
alpha = 1) +
coord_flip()
mydata <- data.frame(Cut = c("Fair", "Good", "Very Good", "Premium", "Ideal"),
Price = c(4300, 3800, 3950, 4700, 3500))
mydata$Cut <- factor(mydata$Cut, levels = c("Fair", "Good", "Very Good", "Premium", "Ideal"))
ggplot(data = mydata, mapping = aes(x = Cut, y = Price)) +
geom_bar(stat = "identity", position = "identity",
width = 0.8, size = 0.25,
colour = "black",
fill = "#FC4E07",
alpha = 1)
# ====================================================
# 点图
# ====================================================
# 棒棒糖图(lollipop chart)
mydata = read.csv("/Users/zfwang/project/DataVisualiztion/DotPlots_Data.csv",
sep = ",",
strings = "NA",
stringsAsFactors = FALSE)
# ====================================================
# 点图
# ====================================================
# 棒棒糖图(lollipop chart)
mydata = read.csv("/Users/zfwang/project/DataVisualiztion/DotPlots_Data.csv",
sep = ",",
na.strings = "NA",
stringsAsFactors = FALSE)
# ====================================================
# 点图
# ====================================================
# 棒棒糖图(lollipop chart)
mydata = read.csv("/Users/zfwang/project/DataVisualiztion/charts/bar/data/DotPlots_Data.csv",
sep = ",",
na.strings = "NA",
stringsAsFactors = FALSE)
mydata
mydata$sum = rowSums(mydata[, 2:3])
order = sort(mydata$sum, index.return = TRUE, decreasing = FALSE)
mydata$City = factor(mydata$City, levels = mydata$City[order$ix])
mydta
mydata
mydata$City
ggplot(data = mydata, mapping = aes(x = sum, y = City)) +
geom_point(shape = 21, size = 3, colour = "black", fill = "#FC4E07")
ggplot(data = mydata, mapping = aes(x = sum, y = City)) +
geom_point(shape = 21, size = 3, colour = "black", fill = "#FC4E07") +
geom_segment(mapping = aes(x = 0, xend = sum, y = City, yend = City))
mydata
ggplot(data = mydata, mapping = aes(x = sum, y = City)) +
geom_point(shape = 21, size = 3, colour = "black", fill = "#FC4E07") +
geom_segment(mapping = aes(x = 0, xend = sum - 1.5,
y = City, yend = City))
ggplot(data = mydata, mapping = aes(x = sum, y = City)) +
geom_point(shape = 21, size = 3, colour = "black", fill = "#FC4E07") +
geom_segment(mapping = aes(x = 0, xend = sum - 3,
y = City, yend = City))
ggplot(data = mydata, mapping = aes(x = sum, y = City)) +
geom_point(shape = 21, size = 3, colour = "black", fill = "#FC4E07") +
geom_segment(mapping = aes(x = 0, xend = sum - 5,
y = City, yend = City))
ggplot(data = mydata, mapping = aes(x = sum, y = City)) +
geom_point(shape = 21, size = 3, colour = "black", fill = "#FC4E07") +
geom_segment(mapping = aes(x = 0, xend = sum - 5,
y = City, yend = City))
ggplot(data = mydata, mapping = aes(x = sum, y = City)) +
geom_point(shape = 21, size = 3, colour = "black", fill = "#FC4E07") +
geom_segment(mapping = aes(x = 0, xend = sum - 100,
y = City, yend = City))
ggplot(data = mydata, mapping = aes(x = sum, y = City)) +
geom_point(shape = 21, size = 3, colour = "black", fill = "#FC4E07") +
geom_segment(mapping = aes(x = 0, xend = sum - 200,
y = City, yend = City))
ggplot(data = mydata, mapping = aes(x = sum, y = City)) +
geom_point(shape = 21, size = 3, colour = "black", fill = "#FC4E07") +
geom_segment(mapping = aes(x = 0, xend = sum - 150,
y = City, yend = City))
ggplot(data = mydata, mapping = aes(x = sum, y = City)) +
geom_point(shape = 21, size = 3, colour = "black", fill = "#FC4E07") +
geom_segment(mapping = aes(x = 0, xend = sum,
y = City, yend = City))
ggplot(data = mydata, mapping = aes(x = sum, y = City)) +
geom_point(shape = 21, size = 3, colour = "black", fill = "#FC4E07")
ggplot(data = mydata, mapping = aes(x = sum, y = City)) +
geom_point(shape = 21, size = 3, colour = "black", fill = "#FC4E07") +
geom_segment(mapping = aes(x = 0, xend = sum,
y = City, yend = City))
mydata = read.csv("/Users/zfwang/project/DataVisualiztion/charts/bar/data/DotPlots_Data.csv",
sep = ",",
na.strings = "NA",
stringsAsFactors = FALSE)
mydata$City = factor(mydata$City, levels = mydata$City[order(mydata$Female)])
mydata
mydata = melt(mydata, vars = "City")
mydata
ggplot(data = mydata, mapping = aes(x = value, y = City, fill = variable)) +
geom_point()
ggplot(data = mydata, mapping = aes(x = value, y = City)) +
geom_point()
ggplot(data = mydata, mapping = aes(x = value, y = City)) +
geom_point(fill = variable)
ggplot(data = mydata, mapping = aes(x = value, y = City, fill = variable)) +
geom_point()
ggplot(data = mydata, mapping = aes(x = value, y = City, fill = factor(variable))) +
geom_point()
ggplot(data = mydata, mapping = aes(x = value, y = City, fill = factor(variable))) +
geom_point(shape = 21, size = 3, colour = "black")
ggplot(data = mydata, mapping = aes(x = value, y = City, fill = factor(variable))) +
geom_point()
ggplot(data = mydata, mapping = aes(x = value, y = City, fill = factor(variable))) +
geom_point(shape = 21, size = 3, colour = "black")
mydata = read.csv("/Users/zfwang/project/DataVisualiztion/charts/bar/data/DotPlots_Data.csv",
sep = ",",
na.strings = "NA",
stringsAsFactors = FALSE)
mydata$City = factor(mydata$City, levels = mydata$City[order(mydata$Female)])
mydata = melt(mydata, vars = "City")
ggplot(data = mydata, mapping = aes(x = value, y = City, fill = factor(variable))) +
geom_point(shape = 21, size = 3, colour = "black")
ggplot(data = mydata, mapping = aes(x = value, y = City, fill = factor(variable))) +
geom_point(shape = 21, size = 3, colour = "black") +
scale_fill_manual(values = c("#00AFBB", "#FC4E07", "#36BED9"))
ggplot(data = mydata, mapping = aes(x = value, y = City, fill = factor(variable))) +
geom_point(shape = 21, size = 3, colour = "black") +
scale_fill_manual(values = c("#00AFBB", "#FC4E07"))
ggplot(data = mydata, mapping = aes(x = value, y = City, fill = factor(variable))) +
geom_point(shape = 21, size = 3, colour = "black") +
scale_fill_manual(values = c("#00AFBB", "#FC4E07", "#36BED9")) +
geom_line(mapping = aes(group = City))
ggplot(data = mydata, mapping = aes(x = value, y = City, fill = factor(variable))) +
geom_point(shape = 21, size = 3, colour = "black") +
scale_fill_manual(values = c("#00AFBB", "#FC4E07", "#36BED9")) +
geom_line(mapping = aes(group = City)) +
theme(legend.position = c(0.85, 0.12))
