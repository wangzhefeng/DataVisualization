axes = FALSE,
main = "Rainbow Color")
par(mfrow = c(1, 5), mar = c(0.5, 0.5, 2.0, 0.5), xaxs = "i", yaxs = "i")
n = 1000
barplot(rep(1, times = n),
col = rainbow(n),
border = rainbow(n),
horiz = FALSE,
axes = FALSE,
main = "Rainbow Color")
barplot(rep(1, times = n),
col = heat.colors(n),
border = heat.colors(n),
horiz = FALSE,
axes = FALSE,
main = "Heat Colors")
barplot(rep(1, times = n),
col = terrain.colors(n),
border = terrain.colors(n),
horiz = FALSE,
axes = FALSE,
main = "Terrain Colors")
barplot(rep(1, times = n),
col = topo.colors(n),
border = topo.colors(n),
horiz = FALSE,
axes = FALSE,
main = "Topo Colors")
barplot(rep(1, times = n),
col = cm.colors(n),
border = cm.colors(n),
horiz = FALSE,
axes = FALSE,
main = "Cm Colors")
dev.off()
barplot(rep(1, times = n),
col = cm.colors(n),
border = cm.colors(n),
horiz = FALSE,
axes = FALSE,
main = "Cm Colors")
barplot(rep(1, times = n),
col = topo.colors(n),
border = topo.colors(n),
horiz = FALSE,
axes = FALSE,
main = "Topo Colors")
barplot(rep(1, times = n),
col = terrain.colors(n),
border = terrain.colors(n),
horiz = FALSE,
axes = FALSE,
main = "Terrain Colors")
barplot(rep(1, times = n),
col = heat.colors(n),
border = heat.colors(n),
horiz = FALSE,
axes = FALSE,
main = "Heat Colors")
par(mfrow = c(1, 5), mar = c(0.5, 0.5, 2.0, 0.5), xaxs = "i", yaxs = "i")
n = 1000
barplot(rep(1, times = n),
col = rainbow(n),
border = rainbow(n),
horiz = FALSE,
axes = FALSE,
main = "Rainbow Color")
barplot(rep(1, times = n),
col = heat.colors(n),
border = heat.colors(n),
horiz = FALSE,
axes = FALSE,
main = "Heat Colors")
barplot(rep(1, times = n),
col = terrain.colors(n),
border = terrain.colors(n),
horiz = FALSE,
axes = FALSE,
main = "Terrain Colors")
barplot(rep(1, times = n),
col = topo.colors(n),
border = topo.colors(n),
horiz = FALSE,
axes = FALSE,
main = "Topo Colors")
barplot(rep(1, times = n),
col = cm.colors(n),
border = cm.colors(n),
horiz = FALSE,
axes = FALSE,
main = "Cm Colors")
dev.off()
par(mfrow = c(1, 5), mar = c(0.5, 0.5, 2.0, 0.5), xaxs = "i", yaxs = "i")
n = 1000
barplot(rep(1, times = n),
col = rainbow(n),
border = rainbow(n),
horiz = FALSE,
axes = FALSE,
main = "Rainbow Color")
barplot(rep(1, times = n),
col = heat.colors(n),
border = heat.colors(n),
horiz = FALSE,
axes = FALSE,
main = "Heat Colors")
barplot(rep(1, times = n),
col = terrain.colors(n),
border = terrain.colors(n),
horiz = FALSE,
axes = FALSE,
main = "Terrain Colors")
barplot(rep(1, times = n),
col = topo.colors(n),
border = topo.colors(n),
horiz = FALSE,
axes = FALSE,
main = "Topo Colors")
barplot(rep(1, times = n),
col = cm.colors(n),
border = cm.colors(n),
horiz = FALSE,
axes = FALSE,
main = "Cm Colors")
ggplot(data = mpg, mapping = aes(x = class, y = displ)) +
geom_bar(mapping = aes(fill = class), stat = "identity") +
scale_fill_manual(values = rainbow(7))
ggplot(data = mpg, mapping = aes(x = class, y = displ)) +
geom_bar(mapping = aes(fill = class), stat = "identity") +
scale_fill_manual(values = heat.colors(7))
ggplot(data = mpg, mapping = aes(x = class, y = displ)) +
geom_bar(mapping = aes(fill = class), stat = "identity") +
scale_fill_manual(values = terrain.colors(7))
ggplot(data = mpg, mapping = aes(x = class, y = displ)) +
geom_bar(mapping = aes(fill = class), stat = "identity") +
scale_fill_manual(values = topo.colors(7))
ggplot(data = mpg, mapping = aes(x = class, y = displ)) +
geom_bar(mapping = aes(fill = class), stat = "identity") +
scale_fill_manual(values = cm.colors(7))
palette = colorRampPalette(c("red", "green", "orange", "blue", "yellow"))
show_col(palette(100000), labels = FALSE, border = NA)
dev.off()
palette = colorRampPalette(c("red", "green", "orange", "blue", "yellow"))
show_col(palette(100000), labels = FALSE, border = NA)
ggplot(data = mpg, mapping = aes(x = class, y = displ)) +
geom_bar(mapping = aes(fill = class), stat = "identity") +
scale_fill_manual(values = palette(n = 7))
show_col(palette(100000), labels = FALSE)
show_col(palette(100000), labels = FALSE)
palette = colorRampPalette(c("red", "green", "orange", "blue", "yellow"))
show_col(palette(100000), labels = FALSE)
palette = colorRampPalette(c("red", "green", "orange", "blue", "yellow"))
show_col(palette(100000), labels = FALSE, broder = NA)
palette = colorRampPalette(c("red", "green", "orange", "blue", "yellow"))
show_col(palette(100000), labels = FALSE)
palette = colorRampPalette(c("red", "green", "orange", "blue", "yellow"))
show_col(palette(10000), labels = FALSE)
palette = colorRampPalette(c("red", "green", "orange", "blue", "yellow"))
show_col(palette(100), labels = FALSE)
show_col(palette(10), labels = FALSE)
show_col(palette(1000), labels = FALSE)
show_col(palette(10000), labels = FALSE)
show_col(gray(0:1000/1000), labels = FALSE)
ggplot(data = mpg, mapping = aes(x = class, y = displ)) +
geom_bar(mapping = aes(fill = class), stat = "identity") +
scale_fill_manual(values = gray(1:6/6))
ggplot(data = mpg, mapping = aes(x = class, y = displ)) +
geom_bar(mapping = aes(fill = class), stat = "identity") +
scale_fill_manual(values = gray(1:7/7))
seq(1, 4) / 4
ndx = expand.grid(x, x, x)
x = seq(1, 4) / 4
ndx = expand.grid(x, x, x)
ndx
mycolor = hsv(h = ndx[, 3], s = ndx[, 2], ndx[, 1], alpha = 0.5)
show_col(mycolor, labels = FALSE)
ggplot(data = mpg, mapping = aes(x = class, y = displ)) +
geom_bar(mapping = aes(fill = class), stat = "identity") +
scale_fill_manual(values = sample(mycolor, 7))
x = seq(1, 4) / 4
ndx = expand.grid(x, x, x)
mycolor = hsv(h = ndx[, 3], s = ndx[, 2], ndx[, 1], alpha = 0.5)
show_col(mycolor, labels = FALSE)
ggplot(data = mpg, mapping = aes(x = class, y = displ)) +
geom_bar(mapping = aes(fill = class), stat = "identity") +
scale_fill_manual(values = sample(mycolor, 7))
ndx
mydata = data.frame(
name = LETTERS[1:5],
value = runif(5, 1, 100)
)
color = colors()[sample(1:100, 5)]
ggplot(data = mydata, mapping = aes(x = name, y = value)) +
geom_bar(mapping = aes(fill = name), stat = "identity") +
scale_fill_manual(values = color)
color
color = c("A" = "red", "B" = "grey", "C" = "orange", "D" = "yellow", "E" = "green")
color
mode(color)
typeof(color)
class(color)
names(color)
names(color)
show_col(color, labels = FALSE)
show_col(color, labels = TRUE)
color = c("red", "grey", "orange", "yellow", "green")
show_col(color, labels = TRUE)
mydata$class = ordered(mydata$name, levels = LETTERS[c(3, 2, 1, 5, 4)])
mydata
mydata$class
ggplot(data = mydata, mapping = aes(x = name, y = value)) +
geom_bar(mapping = aes(fill = class), stat = "identity") +
scale_fill_manual(values = color)
library(scales)
show_col(brewer_pal()(10))
show_col(brewer_pal()(9))
show_col(brewer_pal("div")(5))
show_col(brewer_pal(palette = "Greens")(5))
cols = brewer_pal("div")(5)
show_col(gradient_n_pal(cols)(seq(0, 1, length.out = 30)))
show_col(brewer_pal("div")(5))
seq(0, 1, length.out = 30)
mydata = data.frame(
name = LETTERS[1:6],
value = runif(6, 1, 100)
)
library(ggplot2)
ggplot(data = mydata, mapping = aes(x = name, y = value)) +
geom_bar(mapping = aes(fill = name), stat = "identity") +
scale_fill_brewer(type = "seq", palette = 1, direction)
ggplot(data = mydata, mapping = aes(x = name, y = value)) +
geom_bar(mapping = aes(fill = name), stat = "identity") +
scale_fill_brewer(type = "seq", palette = 1, direction = 1)
ggplot(data = mydata, mapping = aes(x = name, y = value)) +
geom_bar(mapping = aes(fill = name), stat = "identity") +
scale_fill_brewer(type = "div", palette = 1, direction = 1)
ggplot(data = mydata, mapping = aes(x = name, y = value)) +
geom_bar(mapping = aes(fill = name), stat = "identity") +
scale_fill_brewer(type = "qual", palette = 1, direction = 1)
ggplot(data = mydata, mapping = aes(x = name, y = value)) +
geom_bar(mapping = aes(fill = name), stat = "identity") +
scale_fill_brewer(palette = "Blues", dircetion = 1)
ggplot(data = mydata, mapping = aes(x = name, y = value)) +
geom_bar(mapping = aes(fill = name), stat = "identity") +
scale_fill_brewer(palette = "Blues", direction = 1)
ggplot(data = mydata, mapping = aes(x = name, y = value)) +
geom_bar(mapping = aes(fill = name), stat = "identity") +
scale_fill_brewer(palette = "BuGn", direction = 1)
ggplot(data = mydata, mapping = aes(x = name, y = value)) +
geom_bar(mapping = aes(fill = name), stat = "identity") +
scale_fill_distiller(palette = "Greens", direction = 1)
ggplot(data = mydata, mapping = aes(x = name, y = value)) +
geom_bar(mapping = aes(fill = value), stat = "identity") +
scale_fill_distiller(palette = "Greens", direction = 1)
brewer_pal(type = "seq", palette = 1, direction = 1)
show_col(gradient_n_pal(cols)(seq(0, 1, length.out = 1000)), labels = FALSE)
show_col(gradient_n_pal(cols)(seq(0, 1, length.out = 1000)), labels = FALSE, borders = NA)
ggplot(data = mydata, mapping = aes(x = name, y = value)) +
geom_bar(mapping = aes(fill = name), stat = "identity") +
scale_fill_manual(values = brewer_pal(5))
ggplot(data = mydata, mapping = aes(x = name, y = value)) +
geom_bar(mapping = aes(fill = name), stat = "identity") +
scale_fill_manual(values = brewer_pal(6))
ggplot(data = mydata, mapping = aes(x = name, y = value)) +
geom_bar(mapping = aes(fill = name), stat = "identity") +
scale_fill_manual(values = brewer_pal()(6))
ggplot(data = mydata, mapping = aes(x = name, y = value)) +
geom_bar(mapping = aes(fill = name), stat = "identity") +
scale_fill_manual(values = brewer_pal(direction = -1)(6))
library(RColorBrewer)
display.brewer.all(type = "all")
display.brewer.all(type = "seq")
display.brewer.all(type = "div")
display.brewer.all(type = "qual")
display.brewer.pal(9, "BuGn")
brewer.pal(9, "BuGn")
display.brewer.pal(n = 9, name = "BuGn")
par(mfrow = c(1, 5), mar = c(1, 1, 2, 1), xaxs = "i", yaxs = "i")
mycolors = brewer.pal(n = 9, name = "BuGn")
n = 9
barplot(rep(1, times = n),
col = mycolors,
border = mycolors,
horiz = FALSE,
axes = TRUE,
main = "Mycolor of BuGn")
mycolors = brewer.pal(n = 9, name = "OrRd")
barplot(rep(1, times = n),
col = mycolors,
border = mycolors,
horiz = FALSE,
axes = TRUE,
main = "Mycolor of OrRd")
mycolors = brewer.pal(n = 9, name = "YlGn")
barplot(rep(1, times = n),
col = mycolors,
border = mycolors,
horiz = FALSE,
axes = TRUE,
main = "Mycolor of YlGn")
mycolors = brewer.pal(n = 9, name = "Oranges")
barplot(rep(1, times = n),
col = mycolors,
border = mycolors,
horiz = FALSE,
axes = TRUE,
main = "Mycolor of Oranges")
mycolors = brewer.pal(n = 9, name = "Blues")
barplot(rep(1, times = n),
col = mycolors,
border = mycolors,
horiz = FALSE,
axes = TRUE,
main = "Mycolor of Blues")
b1 = brewer.pal(n = 9, name = "BuGn")
b2 = brewer.pal(n = 9, name = "Blues")
c = c(b1[1, 3, 5, 7, 9], b2[2, 4, 6, 8])
show_col(c, labels = FALSE)
b1 = brewer.pal(n = 9, name = "BuGn")
b2 = brewer.pal(n = 9, name = "Blues")
c = c(b1[c(1, 3, 5, 7, 9)], b2[c(2, 4, 6, 8)])
show_col(c, labels = FALSE)
library(ggplot2)
b1 = brewer.pal(n = 9, name = "BuGn")
b2 = brewer.pal(n = 9, name = "Blues")
c = c(b1[c(1, 3, 5, 7, 9)], b2[c(2, 4, 6, 8)])
show_col(c, labels = FALSE)
library(scales)
b1 = brewer.pal(n = 9, name = "BuGn")
b2 = brewer.pal(n = 9, name = "Blues")
c = c(b1[c(1, 3, 5, 7, 9)], b2[c(2, 4, 6, 8)])
show_col(c, labels = FALSE)
library(scales)
b1 = brewer.pal(n = 9, name = "BuGn")
b2 = brewer.pal(n = 9, name = "Blues")
c = c(b1[c(1, 3, 5, 7, 9)], b2[c(2, 4, 6, 8)])
show_col(c, labels = FALSE)
main = "Mycolor of Blues")
dev.off()
dev.off()
b1 = brewer.pal(n = 9, name = "BuGn")
b2 = brewer.pal(n = 9, name = "Blues")
c = c(b1[c(1, 3, 5, 7, 9)], b2[c(2, 4, 6, 8)])
show_col(c, labels = FALSE)
c = c(50, 30, 50, 70, 90, 40)
names(c) = LETTERS[1:6]
c
?row.names
library(plyr)
mydata = data.frame(c)
ggplot(data = mydata, mapping = aes(x = factor(1), y = c, fill = row.names(mydata))) +
geom_bar(stat = "identity", width = 1, col = "white") +
coord_polar(theta = "y", start = 0) +
scale_fill_brewer(palette = "Greens") +
guides(fill = guide_legend(title = NULL)) +
theme_void()
ggplot(data = mydata, mapping = aes(x = factor(1), y = c, fill = row.names(mydata))) +
geom_bar(stat = "identity", width = 1, col = "white") +
coord_polar(theta = "y", start = 0) +
scale_fill_brewer(palette = "Greens") +
guides(fill = guide_legend(reverse = TRUE, title = NULL)) +
theme_void()
theme_get()
default_theme = theme_get()
theme.set(default.theme)
library(ggthemes)
theme.set(default.theme)
theme_set(default.theme)
theme_set(default_theme)
install.packages("ggsci")
install.packages("ggsci")
library(ggsci)
devtools::install_github("ricardo-bion/ggtech", dependencies=TRUE)
devtools::install_github('cttobin/ggthemr')
install.packages("e1071")
devtools::install_github('cttobin/ggthemr')
if(!require(rgdal)) install.packages("rgdal")
if(!require(sf)) install.packages("sf")
if(!require(maptools)) install.packages("maptools")
if(!require(maptools)) install.packages("maptools")
library(ggplot2)
p = ggplot(data = diamonds, mapping = aes(x = x, y = y)) +
xlim(0, 10) +
ylim(0, 10)
p + geom_bin2d()
p = ggplot(data = diamonds, mapping = aes(x = x, y = y)) +
xlim(0, 100) +
ylim(0, 100)
p = ggplot(data = diamonds, mapping = aes(x = x, y = y)) +
xlim(0, 100) +
ylim(0, 100)
p + geom_bin2d()
p = ggplot(data = diamonds, mapping = aes(x = x, y = y)) +
xlim(0, 20) +
ylim(0, 20)
p + geom_bin2d()
p = ggplot(data = diamonds, mapping = aes(x = x, y = y)) +
xlim(0, 25) +
ylim(0, 25)
p + geom_bin2d()
p = ggplot(data = diamonds, mapping = aes(x = x, y = y)) +
xlim(0, 30) +
ylim(0, 30)
p + geom_bin2d()
p = ggplot(data = diamonds, mapping = aes(x = x, y = y)) +
xlim(4, 10) +
ylim(4, 10)
p + geom_bin2d()
p + geom_point()
p + geom_bin2d(bins = 5)
p + geom_bin2d(bins = 100)
p + geom_bin2d(bins = 50)
p + geom_bin2d(bins = 100)
p + geom_bin2d(bins = 1000)
p + geom_bin2d(bins = 200)
p + geom_bin2d(bins = 100)
p + geom_bin2d(binwidth = c(0.1, 0.1))
p + geom_hex()
install.packages("hexbin")
p + geom_hex()
p + geom_hex(bins = 10)
p + geom_hex(binwidth = c(1, 1000))
p + geom_hex(binwidth = c(1, 100))
p + geom_hex(binwidth = c(1, 100))
p + geom_hex(binwidth = c(0.1, 100))
p = ggplot(data = diamonds, mapping = aes(x = caret, y = price))
p + geom_hex()
p2 = ggplot(data = diamonds, mapping = aes(x = carat, y = price))
p2 + geom_hex()
p2 + geom_hex(bins = 10)
p2 + geom_hex(binwidth = c(0.1, 100))
p2 + geom_hex(binwidth = c(1, 1000))
p0 = ggplot(data = mpg, mapping = aes(x = cty, y = hwy))
p0 + geom_count()
mpg[mpg$cty <= 10, ]
mpg[mpg$cty <= 10, mpg$hwy]
mpg[mpg$cty <= 10, c(mpg$cty, mpg$hwy)]
library(dplyr)
mpg %>% select(cty, hwy) %>% filter(cty <= 10)
p0 + geom_count() +
scale_size_area()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
ggplot(data = diamonds, mapping = aes(x = carat)) +
geom_histogram()
p1 = ggplot(data = diamonds, mapping = aes(x = carat))
p1 + geom_histogram()
p1 + geom_histogram(binwidth = 0.1)
p1 + geom_histogram(bins = 30)
p1 + geom_histogram(binwidth = 1)
p1 + geom_histogram(binwidth = 0.1)
p1 + geom_histogram(binwidth = 0.01)
range(diamonds$carat)
5.01 - 0.20
4.81 / 30
library(ggplot2)
p1 = ggplot(data = diamonds, mapping = aes(x = carat))
p1 + geom_histogram()
p1 + geom_histogram(bins = 30)
p1 + geom_histogram(binwidth = (max(diamonds) - min(diamonds)) / 30)
p1 + geom_histogram(binwidth = (max(diamonds$carat) - min(diamonds$carat)) / 30)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram()
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price, fill = cut)) +
geom_histogram(binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price, colour = cut)) +
geom_freqpoly()
ggplot(data = diamonds, mapping = aes(x = price, colour = cut)) +
geom_freqpoly(binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price, stat(density), colour = cut)) +
geom_freqpoly(binwidth = 500)
library(scales)
ggplot(data = diamonds, mapping = aes(x = price, stat(density), colour = cut)) +
geom_freqpoly(binwidth = 500)
ggplot(diamonds, aes(price, stat(density), colour = cut)) +
geom_freqpoly(binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price, colour = cut)) +
geom_freqpoly(binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price, stat(density), colour = cut)) +
geom_freqpoly(binwidth = 500)
?stat
ggplot(mpg, aes(displ)) +
geom_histogram(aes(y = stat(count)))
ggplot(mpg, aes(displ)) +
geom_histogram(aes(y = stat(count)))
ggplot(data = diamonds, mapping = aes(x = price, y = stat(density), colour = cut)) +
geom_freqpoly(binwidth = 500)
install.packages("ggplot2movies")
library(ggplot2movies)
head(movies)
m <- ggplot(movies, aes(rating))
m + geom_histogram(binwidth = 0.1)
m + geom_histogram(aes(weight = votes), binwidth = 0.1) + ylab("votes")
m <- ggplot(movies, aes(rating))
m + geom_histogram(binwidth = 0.1)
mtlong = reshape2::melt(mtcars)
mtlong
ggplotd(data = mtlong, mapping = aes(x = values)) +
facet_wrap(~ variable, scales = "free_x") +
geom_histogram(binwidth = function(x) {2 * IQR(x) / (length(x) ^ (1/ 3))})
ggplot(data = mtlong, mapping = aes(x = values)) +
facet_wrap(~ variable, scales = "free_x") +
geom_histogram(binwidth = function(x) {2 * IQR(x) / (length(x) ^ (1/ 3))})
ggplot(data = mtlong, mapping = aes(x = value)) +
facet_wrap(~ variable, scales = "free_x") +
geom_histogram(binwidth = function(x) {2 * IQR(x) / (length(x) ^ (1/ 3))})
mtlong <- reshape2::melt(mtcars)
#> No id variables; using all as measure variables
ggplot(mtlong, aes(value)) + facet_wrap(~variable, scales = 'free_x') +
geom_histogram(binwidth = function(x) 2 * IQR(x) / (length(x)^(1/3)))
